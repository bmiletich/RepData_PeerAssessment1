{
    "contents" : "---\ntitle: \"Peer Assessment 1\"\noutput: html_document\n---\n###Loading and preprocessing data\nFirst, we will load the data, and filter out all NA data:\n\n\n```r\ndata.raw<-read.csv(\"activity.csv\")\ndata.clean<-data.raw[complete.cases(data.raw),]\n```\n\n###What is mean total number of steps taken per day?\nNow we will create a histogram of the total number of steps each day. We will use the data.table library and the sum function to find the sum of all total steps per day:\n\n\n```r\nlibrary(data.table)\ndata.clean<-as.data.table(data.clean)\nsteps<-data.clean[,{sum(steps)},by=date]$V1\n\nhist(steps,breaks=seq(0,25000,2500),main=\"Steps per day\")\n```\n\n![plot of chunk unnamed-chunk-2](figure/unnamed-chunk-2.png) \n\nWe can calculate the mean and median total number of steps per day with:\n\n\n```r\nmean(steps)\n```\n\n```\n## [1] 10766\n```\n\n```r\nmedian(steps)\n```\n\n```\n## [1] 10765\n```\n\n###What is the average daily activity pattern?\n\nWe will now calculate the 5 minute interval with the most number of steps, on average, across all days. We will first get all unique 5-minute intervals:\n\n\n```r\nintervals.uniq<-unique(data.clean$interval)\n```\nNow we will use the \"which\", \"mean\", and a \"for loop\" to find the average for each 5-minute interval:\n\n\n```r\nmeanList<-NULL\n\nfor (i in 1:length(intervals.uniq)){\n        \n        meanList<-append(meanList,mean(data.clean$steps[which(data.clean$interval==intervals.uniq[i])],na.rm=TRUE))\n        \n        }\n```\n\nFinally we will graph this with a time-series plot by converting the meanList variable to a time-series object and plotting it:\n\n\n```r\nplot.ts(as.ts(meanList),xlab=\"Time in 5 minute intervals\",ylab=\"Steps\",main=\"Time-series of steps over a day\")\n```\n\n![plot of chunk unnamed-chunk-6](figure/unnamed-chunk-6.png) \n\nWe can find the 5 minute interval with the highest average number of steps with this command:\n\n```r\nwhich(meanList==max(meanList))\n```\n\n```\n## [1] 104\n```\n\nThis time period would be approximately 8:40AM.\n\n###Imputing missing values\n\nWe can find the number of missing values with this code:\n\n\n```r\nlength(data.raw$steps)-length(data.raw[complete.cases(data.raw),]$steps)\n```\n\n```\n## [1] 2304\n```\n\nWe will now fill in the NA values with the average 5 minute step counts for that particular time interval within the new variable data.filled:\n\n\n```r\nmeanList<-cbind(intervals.uniq,meanList)\n\ndata.filled<-data.raw\n\nfor (i in 1:length(data.filled[,1])){\n        \n        if(is.na(data.filled$steps[i])){\n                data.filled$steps[i]<-meanList[intervals.uniq==data.filled$interval[i],2]\n                \n                }\n        \n        }\n```\n\nI will now create a histogram of the steps taken per day, with the mean and median total steps per day:\n\n\n```r\ndata.filled<-as.data.table(data.filled)\n\nsteps2<-data.filled[,{sum(steps)},by=date]$V1\n\nhist(steps2,breaks=seq(0,25000,2500),main=\"Steps per day\")\n```\n\n![plot of chunk unnamed-chunk-10](figure/unnamed-chunk-10.png) \n\n```r\nmean(steps2)\n```\n\n```\n## [1] 10766\n```\n\n```r\nmedian(steps2)\n```\n\n```\n## [1] 10766\n```\n\nWe can see from the results above, that imputing the missing data had a very minor effect on the mean and median (the median increased by 1).\n\n###Are there differences in activity patterns between weekdays and weekends?\n\nWe can find out if there are differences in activity patterns by adding another column called \"day\", with factors \"weekday\" and \"weekend\" to our data.filled table:\n\n\n",
    "created" : 1408300918280.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1259269802",
    "id" : "C78FC134",
    "lastKnownWriteTime" : 1408300709,
    "path" : "D:/Google Drive/MBA Classes/Reproducible Research - Coursera/Reproducible_Research_Peer_Assessment1/PA1_template.md",
    "project_path" : "PA1_template.md",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "markdown"
}